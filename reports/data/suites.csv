"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"","0","should_have_item","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_return_result_when_swallow_decorator_and_no_exception","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","exception_utils_tests","",""
"","3","should_swallow_exception","qa-pytest-commons.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","BddScenarioTests","bdd_scenario_tests","",""
"","0","should_iterate_lazily","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","stream_utils_tests","",""
"","0","should_flat_map","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","stream_utils_tests","",""
"","0","should_fail_not_within_dates[test_date2-start_date2-end_date2]","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_match_within_dates[test_date2-start_date2-None]","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","1","should_provide_log_property_with_logger_mixin","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","logger_tests","",""
"","0","should_fail_not_within_dates[None-start_date0-end_date0]","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","1","should_assert_equality","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","SelfTests","self_tests","",""
"","0","should_write_empty_csv","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","file_utils_tests","",""
"","1","should_fail_not_within_dates[test_date1-start_date1-end_date1]","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","1","should_return_value_and_log_with_logger_mixin_trace","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","logger_tests","",""
"","1001","should_work","qa-pytest-commons.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:15 UTC 2025","BddScenarioTests","bdd_scenario_tests","",""
"lazy consumption too","0","should_stream","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","stream_utils_tests","",""
"","0","should_match_within_dates[test_date1-None-end_date1]","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","7007","should_retry","qa-pytest-commons.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:21 UTC 2025","BddScenarioTests","bdd_scenario_tests","",""
"","1017","should_publish_and_retrieve","qa-pytest-rabbitmq.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:15 UTC 2025","QueueHandlerTests","queue_handler_tests","",""
"Test retry logic for a function that may fail multiple times.","2","should_retry","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","SelfTests","self_tests","",""
"","120","should_sleep_for_specified_duration","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","thread_utils_tests","",""
"","0","should_be_singleton","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","object_utils_tests","",""
"","1","should_assert_from_tuple","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","tuple_utils_tests","",""
"","69","should_read_lines_handles_split_lines","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","file_utils_tests","",""
"","0","should_match_items_in_iterator","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_inject_logger_with_logger_decorator","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","logger_tests","",""
"","1","should_crc32_of_file","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","file_utils_tests","",""
"","0","should_create_valid_csv","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","file_utils_tests","",""
"","1","should_assert_from_tuple_with_frozen_dataclass","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","tuple_utils_tests","",""
"","0","should_match_within_dates[test_date3-start_date3-end_date3]","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","25","should_have_a_working_rabbitmq","qa-pytest-rabbitmq.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","QueueHandlerTests","queue_handler_tests","",""
"","0","should_fail","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","skipped","Tue Jun 10 06:29:14 UTC 2025","SelfTests","self_tests","",""
"","0","should_match_within_dates[test_date4-start_date4-end_date4]","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_match_iterator_yielding_all","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","68","should_return_value_and_log_with_trace","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","logger_tests","",""
"","1","should_return_nothing_when_exception_is_raised","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","exception_utils_tests","",""
"","0","should_match","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_iterable_reader_reads_chunks","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","file_utils_tests","",""
"","0","should_raise_invalid_exception","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","object_utils_tests","",""
"","113","should_extract_files_from_tar","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","file_utils_tests","",""
"","0","should_match_stream_containing_every","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_assert_defaults","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","SelfTests","self_tests","",""
"","0","should_return_value_when_no_exception_occurs","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","exception_utils_tests","",""
"","0","should_validate_all","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","stream_utils_tests","",""
"","0","should_stream_file_reads_file","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","file_utils_tests","",""
"","0","should_adapt_sequence","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_collect","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","stream_utils_tests","",""
"","1","should_enforce_immutability_with_dataclass","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","object_utils_tests","",""
"","0","should_not_stream","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","stream_utils_tests","",""
"","4","should_decompress_xz_stream","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","file_utils_tests","",""
"","0","should_match_all_in_iterator","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_match_contains_string_ignoring_case","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_preserve_signature","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","logger_tests","",""
"","1","should_match_within_dates[test_date0-start_date0-end_date0]","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_render_object","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","string_utils_tests","",""
"","2","should_convert_to_dict_and_flatten","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","object_utils_tests","",""
"","0","should_enforce_immutability","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","object_utils_tests","",""
"","1019","should_publish_and_consume","qa-pytest-examples.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:15 UTC 2025","RabbitMqSelfTests","rabbitmq_self_tests","",""
"","0","should_adapt_iterator","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_match_iterator_yielding","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_adapt_object","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","1","should_return_none_when_swallow_decorator_and_exception","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","exception_utils_tests","",""
"","1","should_match_properties","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"Test that a traced assertion passes (decorator coverage).","0","should_assert_true","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","SelfTests","self_tests","",""
"","1","should_trace","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","logger_tests","",""
"","1","should_fail","qa-pytest-commons.tests","Tue Jun 10 06:29:15 UTC 2025","passed","Tue Jun 10 06:29:15 UTC 2025","BddScenarioTests","bdd_scenario_tests","",""
"demonstrates lazy consumption","0","should_stream0","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","stream_utils_tests","",""
"Test that print statement works (placeholder/self-test).","0","should_print","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","SelfTests","self_tests","",""
"","0","should_match_item_in_iterator","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
"","0","should_log_entry_and_exit_with_traced_decorator","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","logger_tests","",""
"","1","should_raise_exception","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","object_utils_tests","",""
"","1","should_assert_from_tuple_with_vanilla_class","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","tuple_utils_tests","",""
"","6002","should_repeat","qa-pytest-commons.tests","Tue Jun 10 06:29:21 UTC 2025","passed","Tue Jun 10 06:29:27 UTC 2025","BddScenarioTests","bdd_scenario_tests","",""
"","0","should_support_immutability","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","object_utils_tests","",""
"
Proves than iterators/streams are lazily consumed, in this case Foo(other)
is not verified at all. If the items are yielded from a communication
channel or file, it means skipping unnecessary items.
","1","should_adapt_stream","qa-testing-utils.tests","Tue Jun 10 06:29:14 UTC 2025","passed","Tue Jun 10 06:29:14 UTC 2025","","matchers_tests","",""
