DEBUG    BddScenarioTests:abstract_tests_base.py:77 setup
DEBUG    BddScenarioTests:abstract_tests_base.py:70 initiating <class 'qa_pytest_commons.generic_steps.GenericSteps'>
DEBUG    GenericSteps:logger.py:77 >>> Given nothing  
DEBUG    GenericSteps:logger.py:92 <<< Given nothing
DEBUG    GenericSteps:logger.py:77 >>> When safely <function BddScenarioTests.should_swallow_exception.<locals>.<lambda> at 0x7f5a6d9958a0> 
DEBUG    GenericSteps:logger.py:77 >>> When failing boom 
ERROR    root:exception_utils.py:29 Exception occurred: boom
Traceback (most recent call last):
  File "/home/runner/work/qa-automation-python/qa-automation-python/qa-testing-utils/src/qa_testing_utils/exception_utils.py", line 27, in safely
    return Some(supplier())
                ~~~~~~~~^^
  File "/home/runner/work/qa-automation-python/qa-automation-python/qa-pytest-commons/src/qa_pytest_commons/generic_steps.py", line 252, in <lambda>
    return safely(lambda: step()).value_or(self)
                          ~~~~^^
  File "/home/runner/work/qa-automation-python/qa-automation-python/qa-pytest-commons/tests/bdd_scenario_tests.py", line 38, in <lambda>
    .when.safely(lambda: self.steps.when.failing(TestException("boom")))
                         ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/qa-automation-python/qa-automation-python/qa-testing-utils/src/qa_testing_utils/logger.py", line 89, in wrapper
    result = func(*args, **kwargs)
  File "/home/runner/work/qa-automation-python/qa-automation-python/qa-pytest-commons/src/qa_pytest_commons/generic_steps.py", line 222, in failing
    raise exception
qa_testing_utils.exceptions.TestException: boom
DEBUG    GenericSteps:logger.py:92 <<< When safely
DEBUG    GenericSteps:logger.py:77 >>> Then it_works <True> 
DEBUG    GenericSteps:logger.py:92 <<< Then it_works
DEBUG    BddScenarioTests:abstract_tests_base.py:83 teardown