[project]
name = "qa-automation-python"
version = "0.0.0" # not relevant
description = "QA Automation framework for Python"
requires-python = ">=3.13"
dependencies = []                                                         # No runtime deps here â€” only tools in envs
authors = [{ name = "Adrian Herscu", email = "adrian.herscu@gmail.com" }]
readme = "README.md"
license = { text = "Apache-2.0" }

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "-e qa-testing-utils @ file:///${PROJECT_ROOT}/qa-testing-utils",
    "-e qa-pytest-commons @ file:///${PROJECT_ROOT}/qa-pytest-commons",
    "-e qa-pytest-webdriver @ file:///${PROJECT_ROOT}/qa-pytest-webdriver",
    "-e qa-pytest-rest @ file:///${PROJECT_ROOT}/qa-pytest-rest",
    "-e qa-pytest-rabbitmq @ file:///${PROJECT_ROOT}/qa-pytest-rabbitmq",
    "types-pika==1.2.0b1",
    "pytest==8.4.0",
    "pytest-cov==6.1.1",
    "pytest-html==4.1.1",
    "allure-pytest==2.14.3",
    "pytest-xdist==3.7.0",
    "autopep8",
    "isort",
    "mkinit",
    "mkdocs==1.6.1",
    "mkdocs-get-deps==0.2.0",
    "mkdocs-material==9.6.14",
    "mkdocs-material-extensions==1.3.1",
    "mkdocs-mermaid2-plugin==1.2.1",
    "mkdocstrings[python]==0.29.1",
    "pymdown-extensions==10.15"
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest.ini_options]
addopts = "-s --import-mode=importlib --html=report.html --self-contained-html --alluredir=allure-results"
python_files = "*_tests.py"
python_classes = "*Tests"
python_functions = "should_*"
# IMPORTANT these also must be present in .vscode/settings.json
testpaths = [
  "qa-testing-utils/tests/qa_testing_utils",
  "qa-pytest-commons/tests/qa_pytest_commons",
  "qa-pytest-rest/tests/qa_pytest_rest",
  "qa-pytest-rabbitmq/tests/qa_pytest_rabbitmq",
  "qa-pytest-webdriver/tests/qa_pytest_webdriver",
  "qa-pytest-examples/tests/qa_pytest_examples",
]
pythonpath = [
  "qa-testing-utils/src",
  "qa-pytest-commons/src",
  "qa-pytest-rest/src",
  "qa-pytest-rabbitmq/src",
  "qa-pytest-webdriver/src",
  "qa-pytest-examples/src",
]

markers = [
  "selenium: marks selenium tests",
  "flaky: marks flaky tests",
  "external: marks tests depending on external system"
]

[tool.pdm.scripts]
clean-all = "git clean -fdX"
format-all = { composite = ["isort .", "autopep8 . --in-place --recursive"] }
# NOTE this overwrites all __init__.py files
regenerate-init = "bash -c 'find qa-*/src/qa_* -type d -exec test -f {}/__init__.py \\; -exec mkinit {} -w --nomods \\;'"
build-all = "bash -c 'for d in qa-*/pyproject.toml; do (cd \"${d%/*}\" && pdm build); done'"
publish-all = "bash -c 'for d in qa-*/pyproject.toml; do (cd \"${d%/*}\" && pdm publish); done'"
install-deps = "pdm install"
allure-generate = "allure generate allure-results -o docs/reports --clean"
mkdocs-serve = "mkdocs serve"

[tool.autopep8]
max_line_length = 80
ignore = []

[tool.isort]
profile = "black"
line_length = 80
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
