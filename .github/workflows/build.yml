name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.devcontainer/**'
      - '**.md'
      - '.idea/**'
      - '.*'
      - '/*/.*'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:4.1
        ports:
          - 5672:5672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          version: "2.24.1"
          python-version: "3.13"

      - name: Cache PDM
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pdm
            .venv/
          key: pdm-${{ runner.os }}-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            pdm-${{ runner.os }}-

      - name: Enable PDM install cache
        run: pdm config install.cache true

      - name: Install dependencies
        run: pdm install --no-editable --no-lock

      - name: Run tests
        run: pdm run pytest -n auto -m "not (flaky or selenium or external)"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          # NOTE: this directory is defined in pyproject.toml
          name: allure-results
          path: allure-results/

  docs:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results/

      - name: Install Allure + MkDocs
        run: |
          npm install -g allure-commandline
          pip install mkdocs mkdocs-material

      - name: Generate Allure report
        run: allure generate allure-results -o docs/reports --clean

      - name: Copy README as index.md
        run: cp README.md docs/index.md

      - name: Build MkDocs site
        run: mkdocs build --config-file ci/mkdocs.yml

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
